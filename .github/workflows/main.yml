# name: iOS CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-test:
#     runs-on: macos-latest

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v4

#       - name: Set Xcode Version
#         run: sudo xcode-select -s /Applications/Xcode_15.2.app

#       - name: Install SwiftLint
#         run: brew install swiftlint

#       - name: Run SwiftLint
#         run: swiftlint || true 

#       - name: Build and Run Tests
#         run: |
#           xcodebuild test \
#             -scheme pritamIosCI \
#             -project pritamIosCI.xcodeproj \
#             -sdk iphonesimulator \
#             -destination 'platform=iOS Simulator,name=iPhone 14,OS=17.2' \
#             ONLY_ACTIVE_ARCH=NO

#       - name: Archive App
#         run: |
#           xcodebuild archive \
#             -scheme pritamIosCI \
#             -project pritamIosCI.xcodeproj \
#             -archivePath $PWD/build/pritamIosCI.xcarchive \
#             SKIP_INSTALL=NO \
#             BUILD_LIBRARY_FOR_DISTRIBUTION=YES

name: iOS CI - Build, Lint & Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ios-ci:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # --------------------------------------------
      # LINT: SwiftLint
      # --------------------------------------------
      - name: Install SwiftLint
        run: |
          brew install swiftlint

      - name: Run SwiftLint
        run: |
          swiftlint
        continue-on-error: true

      # --------------------------------------------
      # BUILD: iOS Simulator (no signing)
      # --------------------------------------------
      - name: Build app (no signing)
        run: |
          xcodebuild clean build \
            -project iosApp/pritamIosCI.xcodeproj \
            -scheme pritamIosCI \
            -destination 'platform=iOS Simulator,name=iPhone 15' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

      # --------------------------------------------
      # TEST: Run Unit Tests + Code Coverage
      # --------------------------------------------
      # Uncomment when ready to run tests with coverage
      # - name: Run Unit Tests (with code coverage)
      #   run: |
      #     xcodebuild test \
      #       -project iosApp/pritamIosCI.xcodeproj \
      #       -scheme pritamIosCI \
      #       -destination 'platform=iOS Simulator,name=iPhone 15' \
      #       -enableCodeCoverage YES \
      #       CODE_SIGN_IDENTITY="" \
      #       CODE_SIGNING_REQUIRED=NO \
      #       CODE_SIGNING_ALLOWED=NO

      # --------------------------------------------
      # SCA: Generate Code Coverage Report with Slather
      # --------------------------------------------
      - name: Install Slather
        run: |
          sudo gem install slather

      - name: List Xcode schemes
        run: |
          xcodebuild -list -project iosApp/pritamIosCI.xcodeproj

      - name: Generate Slather Coverage Report
        run: |
          slather coverage iosApp/pritamIosCI.xcodeproj

      # --------------------------------------------
      # Artifact Upload (Optional)
      # --------------------------------------------
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: slather-report

